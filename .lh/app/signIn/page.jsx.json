{
    "sourceFile": "app/signIn/page.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1695506529585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1695508639528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,10 @@\n import { useState } from 'react';\r\n import { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\r\n import { ToastContainer, toast } from 'react-toastify';\r\n import { db } from '../firebase';\r\n+\r\n+\r\n export default function Signin() {\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const router = useRouter();\r\n@@ -39,13 +41,13 @@\n         await signIn(\"credentials\", { email, password, redirect: true, callbackUrl:'/' });\r\n       }\r\n \r\n   \r\n-      // toast.success(\"You are signed in.\", {\r\n-      //   position: \"top-right\",\r\n-      //   autoClose: 3000,\r\n-      // });\r\n-      // router.push(\"/\");\r\n+      toast.success(\"You are signed in.\", {\r\n+        position: \"top-right\",\r\n+        autoClose: 3000,\r\n+      });\r\n+      router.push(\"/\");\r\n     } catch (error) {\r\n       toast.error(error.message);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1695508665144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,8 @@\n \r\n   \r\n   const handleSignIn = async () => {\r\n     try {\r\n-      // Dobavite Firestore instancu\r\n      \r\n   \r\n       // Dohvati korisnika iz Firestore-a\r\n       const usersRef = collection(db, \"users\");\r\n"
                },
                {
                    "date": 1695508671483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,10 +17,8 @@\n   \r\n   const handleSignIn = async () => {\r\n     try {\r\n      \r\n-  \r\n-      // Dohvati korisnika iz Firestore-a\r\n       const usersRef = collection(db, \"users\");\r\n       const q = query(usersRef, where(\"email\", \"==\", email));\r\n       const querySnapshot = await getDocs(q);\r\n   \r\n"
                },
                {
                    "date": 1695509031448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,11 +11,8 @@\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n   const router = useRouter();\r\n \r\n-\r\n-\r\n-  \r\n   const handleSignIn = async () => {\r\n     try {\r\n      \r\n       const usersRef = collection(db, \"users\");\r\n"
                },
                {
                    "date": 1695563065512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n 'use client';\r\n-import { getSession, signIn, useSession } from 'next-auth/react';\r\n+import { signInWithEmailAndPassword } from 'firebase/auth'; // Dodati Firebase Auth funkciju za prijavu\r\n import { useRouter } from 'next/navigation';\r\n import { useState } from 'react';\r\n import { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\r\n import { ToastContainer, toast } from 'react-toastify';\r\n"
                },
                {
                    "date": 1695563096491,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n 'use client';\r\n-import { signInWithEmailAndPassword } from 'firebase/auth'; // Dodati Firebase Auth funkciju za prijavu\r\n+import { signInWithEmailAndPassword } from 'firebase/auth'; \r\n import { useRouter } from 'next/navigation';\r\n import { useState } from 'react';\r\n import { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\r\n import { ToastContainer, toast } from 'react-toastify';\r\n@@ -13,35 +13,34 @@\n   const router = useRouter();\r\n \r\n   const handleSignIn = async () => {\r\n     try {\r\n-     \r\n-      const usersRef = collection(db, \"users\");\r\n-      const q = query(usersRef, where(\"email\", \"==\", email));\r\n+      const usersRef = collection(db, 'users');\r\n+      const q = query(usersRef, where('email', '==', email));\r\n       const querySnapshot = await getDocs(q);\r\n-  \r\n+\r\n       if (querySnapshot.size === 0) {\r\n         // Korisnik s ovom email adresom ne postoji u Firestore-u\r\n-        throw new Error(\"User not found.\");\r\n+        throw new Error('User not found.');\r\n       }\r\n-  \r\n+\r\n       // Pretpostavka da postoji samo jedan korisnik s ovim emailom\r\n       const userDoc = querySnapshot.docs[0];\r\n       const userData = userDoc.data();\r\n-  \r\n+\r\n       if (!userData.isEmailVerified) {\r\n         // Korisnikova email adresa nije verificirana\r\n-        throw new Error(\"Email is not verified.\");\r\n-      }else{\r\n-        await signIn(\"credentials\", { email, password, redirect: true, callbackUrl:'/' });\r\n+        throw new Error('Email is not verified.');\r\n+      } else {\r\n+        // Koristite Firebase Auth funkciju za prijavu\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n       }\r\n \r\n-  \r\n-      toast.success(\"You are signed in.\", {\r\n-        position: \"top-right\",\r\n+      toast.success('You are signed in.', {\r\n+        position: 'top-right',\r\n         autoClose: 3000,\r\n       });\r\n-      router.push(\"/\");\r\n+      router.push('/');\r\n     } catch (error) {\r\n       toast.error(error.message);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1695563199114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useRouter } from 'next/navigation';\r\n import { useState } from 'react';\r\n import { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\r\n import { ToastContainer, toast } from 'react-toastify';\r\n-import { db } from '../firebase';\r\n+import { auth, db } from '../firebase';\r\n \r\n \r\n export default function Signin() {\r\n   const [email, setEmail] = useState('');\r\n"
                }
            ],
            "date": 1695506529585,
            "name": "Commit-0",
            "content": "'use client';\r\nimport { getSession, signIn, useSession } from 'next-auth/react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useState } from 'react';\r\nimport { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { db } from '../firebase';\r\nexport default function Signin() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const router = useRouter();\r\n\r\n\r\n\r\n  \r\n  const handleSignIn = async () => {\r\n    try {\r\n      // Dobavite Firestore instancu\r\n     \r\n  \r\n      // Dohvati korisnika iz Firestore-a\r\n      const usersRef = collection(db, \"users\");\r\n      const q = query(usersRef, where(\"email\", \"==\", email));\r\n      const querySnapshot = await getDocs(q);\r\n  \r\n      if (querySnapshot.size === 0) {\r\n        // Korisnik s ovom email adresom ne postoji u Firestore-u\r\n        throw new Error(\"User not found.\");\r\n      }\r\n  \r\n      // Pretpostavka da postoji samo jedan korisnik s ovim emailom\r\n      const userDoc = querySnapshot.docs[0];\r\n      const userData = userDoc.data();\r\n  \r\n      if (!userData.isEmailVerified) {\r\n        // Korisnikova email adresa nije verificirana\r\n        throw new Error(\"Email is not verified.\");\r\n      }else{\r\n        await signIn(\"credentials\", { email, password, redirect: true, callbackUrl:'/' });\r\n      }\r\n\r\n  \r\n      // toast.success(\"You are signed in.\", {\r\n      //   position: \"top-right\",\r\n      //   autoClose: 3000,\r\n      // });\r\n      // router.push(\"/\");\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n    <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n          <img\r\n            className=\"mx-auto h-10 w-auto\"\r\n            src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=500\"\r\n            alt=\"Your Company\"\r\n          />\r\n          <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-white\">\r\n            Sign in to your account\r\n          </h2>\r\n        </div>\r\n\r\n        <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n          <div className=\"space-y-6\">\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-white\">\r\n                Email address\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                  className=\"block w-full rounded-md border-0 bg-white/5 py-1.5 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-white\">\r\n                  Password\r\n                </label>\r\n                <div className=\"text-sm\">\r\n                  <div onClick={() => router.push('/forgot-password')} className=\"cursor-pointer font-semibold text-indigo-400 hover:text-indigo-300\">\r\n                    Forgot password?\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"current-password\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                  className=\"block w-full rounded-md border-0 bg-white/5 py-1.5 text-white shadow-sm ring-1 ring-inset ring-white/10 focus:ring-2 focus:ring-inset focus:ring-indigo-500 sm:text-sm sm:leading-6\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n          \r\n              <button\r\n                onClick={() => handleSignIn()}\r\n                disabled={!email || !password}\r\n                className=\"disabled:opacity-40 flex w-full justify-center rounded-md bg-indigo-500 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500\"\r\n              >\r\n                Sign in\r\n              </button>\r\n       \r\n          </div>\r\n\r\n    \r\n            <button onClick={() => router.push('signUp')} className=\"font-semibold leading-6 text-indigo-400 hover:text-indigo-300\">\r\n              Sign Up\r\n            </button>\r\n            <ToastContainer/>\r\n       \r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
        }
    ]
}